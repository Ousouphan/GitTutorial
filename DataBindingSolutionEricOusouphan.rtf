{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0\c84706;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
Eric Ousouphan, Data Binding Solution. \
\
\
	Since data from the models are assigned only once, We\'92d like to be able to create a code that can update values and views in the view when we update them. First, we must wrap the information to an object that can update the information and then share it. To do this, we use a feature called \'93property observers\'94 and to make it simpler for us to compare values, we can use generics. \
	We create a class, called class1\'94 that stores a value and we use the \'93didSet\'94 function to update the value when needed. Next, we create a closure function, closure1, to create a task which can be sent off to any view or or model. This closure will accept the value \'93T\'94 from our generic and then do some kind of function that returns nothing. \
	Next, we must couple class1 and closure1 to where our closure gets called when the class is changed; this is done by wrapping this information into a new class called \'93bond.\'94 This class initializes \'93closure1\'94 and sets the value of the closure to itself. \'93Bond\'94 also has a function called \'93bind\'94 which will append the new information, explained later. We must also add some information to our class1, we will add an array of bonds and implement the \'93didSet\'94 function so it repeats the function over that array and calls wrapped closures. We must also create another class, boundbox, because we don\'92t want to strongly reference them. Then, we must append our class1 to our array in class1 by using the \'93bind\'94 function we created earlier. \
	We then create a name variable and set it to some value. Then we have to bind it to \'93nameLabel\'94 by creating a constant that uses a closure that updates the label and then uses the \'93bind\'94 function to update it. Now, every time the name property is changed, the name label is updated to the new value. \
}